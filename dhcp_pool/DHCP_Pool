#!/usr/bin/env python

import ipaddress
import datetime
import os
import subprocess

web_page_home = '/var/www/html/DHCP_Pool'
tenant = []

with open('/tmp/leases', 'r') as leases_file:
    leases = leases_file.readlines()
    for line, today in enumerate(leases):
        if datetime.datetime.now().strftime("%Y/%m/%d") in today and "ends" in today:
            tenant.append(leases[line - 2].replace('{', '').replace('lease', '').replace('\n', ''))
        else:
            continue
subnet = []
subnet_range = {}

with open('/tmp/dhcpd.conf', 'r') as dhcpd_file:
    dhcp = dhcpd_file.readlines()
    for line, ip in enumerate(dhcp):
        if 'subnet ' in ip and 'netmask ' in ip:
            Subnet = ip.split()[1]
            Netmask = ip.split()[3]
            Network = ipaddress.IPv4Network(u'%s/%s' % (Subnet, Netmask))
            subnet.append(Network)
            ip_range = "%s - %s" % (str(Network[0]), str(Network[-1]))
            network_range = dhcp[line + 9].replace('range ', '').replace(';', '').replace('\n', '').strip().split(' ')
            dhcp_range = "%s - %s" % (network_range[0], network_range[1])
            if network_range[0].split('.')[2] == network_range[1].split('.')[2]:
                total_servers = int(network_range[1].split('.')[3]) - int(network_range[0].split('.')[3]) + 1
            elif network_range[0].split('.')[2] != network_range[1].split('.')[2]:
                difference = int(network_range[1].split('.')[2]) - int(network_range[0].split('.')[2])
                total_servers = int(network_range[1].split('.')[3]) - int(
                    network_range[0].split('.')[3]) + 256 + difference
            else:
                total_servers = 'NULL'
            counter = total_servers
            used_ips = []
            for ipaddr in list(set(tenant)):
                if ipaddress.ip_address(u'%s' % ipaddr.replace(' ', '')) in ipaddress.ip_network(Network):
                    counter -= 1
                    used_ips.append(ipaddr.replace(' ', ''))
                elif ipaddress.ip_address(u'%s' % ipaddr.replace(' ', '')) not in ipaddress.ip_network(Network):
                    non_reserved = counter
            subnet_range[Network] = "%s, %s, %s, %s, %s, %s" % (
                Netmask, ip_range, dhcp_range, total_servers, non_reserved, used_ips)

if os.path.isdir(web_page_home) == False:
    subprocess.call(('mkdir %s') % web_page_home, shell=True)
else:
    pass

html_page = open('%s/dhcp_pool_status.html' % web_page_home, 'w')

html_header = """
<!DOCTYPE html>
<html>
<head>
        <meta charset="utf-8">
        <style type="text/css">
                table {
                        margin-left: 10px;
                        margin-right: 10px;
                        border: 1px solid black;
                        border-collapse: collapse;
                        caption-side: top;
                }
		table.sortable thead {
                        background-color:#eee;
                        color:#666666;
                        font-weight: bold;
                        cursor: default;
                }
                th {
                        border:4px solid white;
                        background-color: #990134;
			color: white;
                        font-size: 16px;
                }
                td {
                        border: 4px solid white;
                }
                caption {
                        padding-top: 10px;
                }
                .cellcolor {
                        background-color: white;
                }
                .cellcolor:hover {
                        background-color: #FCDFFF;
                }
        </style>
	<script src="/eclwatch/js/sorttable.js"></script>
        <title>GBQ - DHCP Pool Status</title>
</head>
<body>
        <table class="sortable">
                <caption>
                        <strong>GBQ - DHCP Pool Status</strong>
                </caption>
	<thead>
                <tr>
                        <th style="color:white">Network</th>
                        <th style="color:white">Netmask</th>
                        <th style="color:white">Network Range</th>
                        <th style="color:white">DHCP Pool Range</th>
                        <th style="color:white">Total Number of IP's</th>
                        <th style="color:white">Total Free IP addresses</th>
			<th style="color:white">Used IP Addresses</th>
                </tr>
	</thead>
"""

html_page.write(html_header)

for key, value in subnet_range.iteritems():
    opening_rows = """<tr style="font-size:16px" class=cellcolor>"""
    html_page.write(opening_rows)
    cell1 = """<td>%s</td>""" % key
    html_page.write(cell1)
    cell2 = """<td>%s</td>""" % value.split(',')[0]
    html_page.write(cell2)
    cell3 = """<td>%s</td>""" % value.split(',')[1]
    html_page.write(cell3)
    cell4 = """<td>%s</td>""" % value.split(',')[2]
    html_page.write(cell4)
    cell5 = """<td><center>%s</center></td>""" % value.split(',')[3]
    html_page.write(cell5)
    cell6 = """<td><center>%s</center></td>""" % value.split(',')[4]
    html_page.write(cell6)
    cell7 = """<td><font-size:6>%s</font></td>""" % value.split('[')[1].replace(']', '')
    html_page.write(cell7)
    closing_rows = """</tr>"""
    html_page.write(closing_rows)
html_closing = """
	</table>
</body>
</html>
"""

html_page.write(html_closing)
html_page.close()
